generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
  engineType      = "library"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_DATABASE_URL")
  relationMode = "prisma"
}

model Category {
  id         String      @id @default(uuid())
  name       String
  companions Companion[]
}

model Companion {
  id           String    @id @default(uuid())
  userId       String
  userName     String
  src          String
  name         String    @db.Text
  description  String    @db.LongText
  instructions String    @db.LongText
  seed         String    @db.Text
  backstory    String    @db.Text
  traits       String    @db.Text
  age          Int
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  categoryId   String
  category     Category  @relation(fields: [categoryId], references: [id])
  messages     Message[]

  @@index([categoryId])
  @@fulltext([name])
}

model Message {
  id          String    @id @default(uuid())
  role        Role
  content     String    @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  companionId String
  userId      String
  companion   Companion @relation(fields: [companionId], references: [id], onDelete: Cascade)

  @@index([companionId])
}

model UserSubscription {
  id                     String    @id @default(uuid())
  userId                 String    @unique
  stripeCustomerId       String?   @unique @map("stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map("stripe_subscription_id")
  stripePriceId          String?   @map("stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map("stripe_current_period_end")
}

model Transaction {
  id          String   @id @default(cuid())
  userId      String
  amount      Int
  type        String?
  description String?
  createdAt   DateTime @default(now())
}

model Wallet {
  id      String @id @default(uuid())
  userId  String @unique
  balance Int

  @@index([userId])
}

model LibraryItem {
  id            String @id @default(uuid())
  userId        String @unique
  base64_string String

  @@index([userId])
}

model Style {
  id       Int    @id @default(autoincrement())
  value    String 
  label    String 
  imgSrc   String 
}

model Ethnicity {
  id       Int    @id @default(autoincrement())
  value    String
  label    String
  src      String
}

model Eyecolor {
  id       Int    @id @default(autoincrement())
  value    String
  label    String
  src      String
}

model Hairstyle {
  id       Int    @id @default(autoincrement())
  value    String 
  label    String
  src      String
}

model Haircolor {
  id       Int    @id @default(autoincrement())
  value    String
  label    String
  src      String
}

model Bodytype {
  id       Int    @id @default(autoincrement())
  value    String
  label    String
  imageSrc String
}

model Breastsize {
  id       Int    @id @default(autoincrement())
  value    String
  label    String
  imageSrc String
}

model Buttsize {
  id       Int    @id @default(autoincrement())  
  value    String
  label    String
  imageSrc String
}

model Personality {
  id          Int    @id @default(autoincrement())
  value       String
  label       String
  imageSrc    String
  description String
}

model Occupation {
  id       Int    @id @default(autoincrement())
  value    String
  label    String
}

model Hobbies {
  id       Int    @id @default(autoincrement())
  value    String
  label    String
}

model Relationship {
  id       Int    @id @default(autoincrement())
  value    String
  label    String
  imageSrc String
}

model Clothing {
  id       Int    @id @default(autoincrement())
  value    String
  label    String
}

enum Role {
  user
  system
}
